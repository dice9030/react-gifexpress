{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOlB,SAEE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEVC,EAFU,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAMF,GAHV,cAGVG,EAHU,gBAKKA,EAAKC,OALV,uBAKTC,EALS,EAKTA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVzB,kBAcTM,GAdS,4CAAH,sDCCRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,wCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAIA,QCJFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGtB,ECHyB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAY,WACRxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEfH,EACI,CACIf,KAAKkB,EACLL,SAAQ,SAM1B,CAACpB,IAIIqB,EDpBuBK,CAAa1B,GAA9ByB,EAAd,EAASlB,KAAWa,EAApB,EAAoBA,QAEnB,OACI,qCACI,qBAAIJ,UAAU,6CAAd,cAA6DhB,EAA7D,OAGEoB,GAAW,mBAAGJ,UAAU,6CAAb,qBACT,qBAAKA,UAAU,YAAf,SAIQS,EAAKhB,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEjBxBgB,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACK,oDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEO2C,EAAWnB,KAAK,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCnBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.44c5e451.chunk.js","sourcesContent":["import React ,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=> {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n    } \r\n\r\n    return (\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n            {/* <h1> {inputValue}  </h1> */}\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n} \r\n","\r\n export const getGifs = async(category) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=r9rRW53WGHSobLnu3vNJq6OQHs2Wsus1`\r\n        const resp = await  fetch(url);\r\n\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title:img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n        \r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n  \r\n    return (\r\n        <div className=\"card animate__animated animate__flash\" >\r\n           <img src={ url } alt=  {title} />\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n   const {  data:imgs, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__backInDown\"> {category} </h3>   \r\n\r\n\r\n            { loading && <p className=\"card animate__animated animate__backInDown\">Loading</p> }\r\n                <div className=\"card-grid\">\r\n                    \r\n                    {\r\n                        \r\n                        imgs.map( img => (\r\n                            <GifGridItem \r\n                            key={img.id} \r\n                            { ...img }\r\n                            />\r\n                            \r\n                        ))\r\n                        }\r\n                    \r\n                </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nimport {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect(  ()  => {\r\n        getGifs(category).then(imgs => {\r\n          \r\n                setState(\r\n                    {\r\n                        data:imgs,\r\n                        loading:false,\r\n                    }\r\n                )\r\n           \r\n           \r\n        })\r\n    },[category])\r\n     \r\n\r\n  \r\n    return state;\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  \r\n   \r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n   \r\n//    const handleAdd = () => {\r\n//             // setCategories([...categories,'diego']);\r\n//             setCategories( cats => [...cats,'diego']);\r\n//    }\r\n\r\n    return (\r\n        <>\r\n             <h2>GifExpertApp diego</h2>\r\n             <AddCategory setCategories={ setCategories } />\r\n             <hr />\r\n\r\n             {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n             <ol>\r\n                { \r\n                    categories.map( category => \r\n                        ( <GifGrid \r\n                            key={category}\r\n                            category={category} />)\r\n                    ) \r\n                 }    \r\n             </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />\n"],"sourceRoot":""}